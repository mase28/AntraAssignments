1. Describe the problem generics address.
	Generics allow you to create type parameters for classes and methods.
	It makes classes and methods type safe.

2. How would you create a list of strings, using the generic List class?
	List<string>

3. How many generic type parameters does the Dictionary class have?
	2: Dictionary<Tkey, TValue>

4. True/False. When a generic class has multiple type parameters, they must
all match.
	False

5. What method is used to add items to a List object?
	Add(): ListName.Add(item)

6. Name two methods that cause items to be removed from a List.
	ListName.Remove(value)
	ListName.RemoveAt(index)

7. How do you indicate that a class has a generic type parameter?
	public class ClassName<T> {} 

8. True/False. Generic classes can only have one generic type parameter.
	False

9. True/False. Generic type constraints limit what can be used for the generic
type.
	False

10. True/False. Constraints let you use the methods of the thing you are
constraining to.
	True

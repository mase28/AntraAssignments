Understanding Data Types

1. What type would you choose for the following "numbers"?
	- A person's telephone number: int
	- A person's height: float
	- A person's age: int
	- A person's gender: byte
	- A person's salary: double
	- A book's ISBN: long
	- A book's price: float

2. What are the differences between value type and reference type variables? What is boxing and unboxing? 
	The difference between a value type variable and a reference type variable is that a value type variable holds
	its own data in its memory allocation in the stack whereas a reference type data is a memory address in the 
	stack that points to some data in the heap. 

	Boxing is the act of casting a variable type to the variable type object where it is then stored on the heap. 
	Unboxing is then casting an object type into a value type variable on the stack.

3. What is meant by the terms managed resource and unmanaged resource in .NET?
	Managed resources are maintained by the garbage collector and will free the memory at the end of runtime whereas
	unmanaged resources are not recorded by the garbage collector and will cause leaked memory if not freed. 

4. Whats the purpose of Garbage Collector in .NET? 
	C# requires manual memory allocation and deallocation for data usage by the program. Thus the purpose of the 
	Garbage Collector is to take some of the responsiblities of memory management off of the programmer by 
	allocating and freeing memory automatically.
 


Controlling Flow and Converting Types

1. What happens when you divide an int variable by 0?
	You get a DivideByZero Error.

2. What happens when you divide a double variable by 0?
	It will return infinity.

3. What happens when you overflow an int variable, that is, set it to a value beyond its range?
	If you overflow an int, it will loop back to the negative max for an int, which would be -2,147,483,647.

4. What is the difference between x = y++; and x = ++y;
	For x = y++, it will first assign x to the value of y and then increment x by 1. For x = ++y, it will increment
	the value of y by 1 and then assign that value to x.

5. What is the difference between break, continue, and return when used inside a loop statement?
	Break will exit out of the loop and continue executing the rest of the code after the loop. Continue will cause
	the loop to run again. Return will exit outside of the loop and end the function.

6. What are the three parts of a for statement and which of them are required?
	The first part executes once (mainly used to initialize variables for the loop), the second part defines the 
	condition for when the loop ends, and the last part is executed once everytime the loop ends. None of the parts
	are required, which will cause an infinite loop.

7. What is the difference between the = and == operators?
	= is used to assign values to variables. == is a boolean operation that returns true if both sides of the 
	operation are equal, otherwise false.

8. Does the following statement compile? for (;true; );
	No. Only assignment, call, increment, decrement, await, and new object expressions can be used as a statement.

9. What does the underscore _ represent in a switch expression?
	If the switch statement doesn't match anything before the underscore, then the code after the underscore will 		run.

10. What interface must an object implement to be enumerated over by using the foreach statement?
	You must use IEnumerator interface to enumerate an object using the foreach loop.




Conceptual Questions:

1. What does CRUD stand for? 
	Create, Read, Update, Delete

2. What are System Databases?
	System Databases are the databases that are installed during the installation of the SQL server. These 
	databases are Master, Model, Msdb, Tempdb, and Mssql system resource. 

3. What is OLAP and OLTP?
	OLTP stands for Online Transactional Process which are smaller in size and consist of everyday type 
	transactions. OLAP stands for Online Analytical Process and is large and consists of historical records. The 
	OLAP is a container of data from one or more OLTPs. The OLTP servers use ETL to alter the data into the format
	used by the OLAP. 

4. What is the difference between DDL vs. DML?
	The difference between Data Definition Language and Data Manipulation Language is that DDL is used to create 
	objects in a database whereas DML is used to query and modify the created data. 

5. What does the "Like" keyword do? 
	The Like operator is used in the Where clause to filter entries based on a predefined pattern.

6. List the wildcards available for the Like Operator.
	The following wildcards are usable: '%' : zero or more to any character, '_' : any singular character, '[]'
	any character(s) listed in the bracket, '^' excludes character(s), '-' range of characters. 

7. What's the difference between left join and inner join?
	Left join combines each entry of the table before the left join with matching entries in the table to the right
	of the left join, otherwise the left table entries without a match are joined by null. Inner join only returns
	the entries in both tables that have matching entries in both tables. 




Queries:

1. Write a query that retrieves the columns ProductID, Name, Color, and ListPrice from the Production.Product table, with no filter.

select ProductID, Name, Color, ListPrice
from Production.Product

2. Write a query that retrieves the columns ProductID, Name, Color and ListPrice from the Production.Product table, excluding the rows that ListPrice is 0.

select ProductID, Name, Color, ListPrice
from Production.Product
where ListPrice != 0

3. Write a query that retrieves the columns ProductID, Name, Color and ListPrice from the Production.Product table, the rows that are not NULL for the Color column.

select ProductID, Name, Color, ListPrice
from Production.Product
where Color is not Null

4. Write a query that retrieves the columns ProductID, Name, Color and ListPrice from the Production.Product table, the rows that are not NULL for the column Color, and the column ListPrice has a value greater than zero.

select ProductID, Name, Color, ListPrice
from Production.Product
where Color is not null and ListPrice > 0

5. Write a query that concatenates the columns Name and Color from the Production.Product table by excluding the rows that are null for color.

select Name + ' ' + Color
from Production.Product
where Color is not Null

6. Write a query that generates the following result set from Production.Product:


NAME: LL Crankarm  --  COLOR: Black


NAME: ML Crankarm  --  COLOR: Black


NAME: HL Crankarm  --  COLOR: Black


NAME: Chainring Bolts  --  COLOR: Silver


NAME: Chainring Nut  --  COLOR: Silver


NAME: Chainring  --  COLOR: Black

select Name, Color
from Production.Product
where Color in ('Black', 'Silver')

7. Write a query to retrieve the to the columns ProductID and Name from the Production.Product table filtered by ProductID from 400 to 500 using between

select ProductID, Name
from Production.Product
where ProductID between 400 and 500

8. Write a query to retrieve the columns ProductID, Name and color from the Production.Product table restricted to the colors black and blue

select ProductID, Name, Color
from Production.Product
where Color in ('Black', 'Blue')

9. Write a query to get a result set on products that begins with the letter S. 

select *
from Production.Product
where Name like 'S%'

10. Write a query that retrieves the columns Name and ListPrice from the Production.Product table. Your result set should look something like the following. Order the result set by the Name column. The products name should start with either 'A' or 'S'


Name                                            ListPrice


Adjustable Race                                   0,00


All-Purpose Bike Stand                            159,00


AWC Logo Cap                                      8,99


Seat Lug                                          0,00


Seat Post                                         0,00

select Name, ListPrice
from Production.Product
where Name like 'S%' or Name like 'A%'
order by Name Asc

11. Write a query so you retrieve rows that have a Name that begins with the letters SPO, but is then not followed by the letter K. After this zero or more letters can exists. Order the result set by the Name column.

select *
from Production.Product
where Name like '[SPO][^k]%'
order by Name Asc

12. Write a query that retrieves the unique combination of
columns ProductSubcategoryID and Color from the Production.Product table. We do not want any rows that are NULL.in any of the two columns in the result. (Hint: Use IsNull)

select isNull(ProductSubcategoryID, 0) as "Product Sub ID", isNull(Color, 'N/A') as Color
from Production.Product
